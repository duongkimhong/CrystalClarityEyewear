@model IPagedList<CrystalClarityEyewearWebApp.Models.Post>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>Hình ảnh</th>
            <th>Tiêu đề</th>
            <th>Ngày tạo</th>
            <th>Ngày chỉnh sửa</th>
            <th>Hiển thị</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            var strCheck = item.IsActive ? "<a href='#'><i class='fa fa-check text-success'></i></a>" : "<a href='#'><i class='fas fa-times text-danger'></i></a>";
            <tr class="trow_@item.Id">
                <td>
                    <img src="@item.Image" width="50" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreateDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ModifiedDate)
                </td>
                <td class="text-center">
                    @Html.Raw(strCheck)
                </td>
                <td>
                    <button class="btn btn-outline-success disabled mr-2" type="button"><a asp-action="Edit" asp-route-id="@item.Id">Edit</a></button>
                    <button class="btn btn-outline-danger disabled mr-2 btnDelete" type="button"><a asp-action="Delete" asp-route-id="@item.Id">Delete</a></button>
                    @* <button data-id="@item.Id" class="btn btn-outline-danger btnDelete">Delete</button> *@
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="pagination-container d-flex justify-content-end mr-5">
    <ul class="pagination">

        @if (Model.HasPreviousPage)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1 })">Previous</a>
            </li>
        }

        @for (var i = 1; i <= Model.PageCount; i++)
        {
            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
            </li>
        }

        @if (Model.HasNextPage)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1 })">Next</a>
            </li>
        }

    </ul>
</div>
